"""
---------------------
LocatorDelaySystem
Support Service V1.10
---------------------
LOG
- added checking in
"""
import json,getpass,urllib2,urllib,os,sys
import datetime as dt
import maya.cmds as cmds

#--------------
# user
#--------------


script_version = 'V1.10'
#Check Info
#Time
date = dt.datetime.today()
value1 = urllib.quote_plus(str(date))
#User Info
script_dirpath = ''
for n in sys.path :
    if n.__contains__('/maya/scripts'):
        script_dirpath = n
data_set = {}
try:
    with open(script_dirpath+'/BRSLocDelay/user', 'r') as f:
        data_set = json.load(f)
except:
    data_set['email'] = ''
    pass
user = str(getpass.getuser()).upper()
ma_ver = 'MAYA'+str(cmds.about(version=True))
ip_host = str(urllib2.urlopen('https://v4.ident.me', timeout=5).read().decode('utf8'))
value2_list = [data_set['email'],user,ma_ver,ip_host]
value2 = ','.join(value2_list)
value2 = urllib.quote_plus(value2)
#Action
global frameRate
fps = str(frameRate)+'fps'
value3_list = [script_version,fps]
value3 = ','.join(value3_list)
value3 = urllib.quote_plus(value3)
url = 'https://maker.ifttt.com/trigger/brs_locDlay/with/key/lt6C8G5VRbvc2fOnGjmS5_4J9A_fwtNjQ2VQJ6fO5YK?value1='+value1+'&value2='+value2+'&value3='+value3
urllib2.urlopen(url, timeout=5).read()


#Supporter Coding

#--------------
# ui
#--------------
cmds.window(winID,e=True,sizeable=True)

#--------------
# set keyframe
#--------------

def newDoSetKey(*_):
    # clear Temp Node
    clearTemp()

    minTime = cmds.playbackOptions(q=True, minTime=True)
    maxTime = cmds.playbackOptions(q=True, maxTime=True)
    btween = round(3 * (frameRate / 24), 0)
    btweenstart = round(3 * (frameRate / 24), 0)

    objectList = cmds.ls(type='locator')
    selectionList = []
    locatorList = []
    for n in objectList:
        if n.__contains__('aimLoc') or n.__contains__('posLoc'):
            cmds.select(n, r=True)
            cmds.pickWalk(d='up')
            x = (cmds.ls(sl=True)[0])
            print(n)
            print(x)
            locatorList.append(x)
            x = x[:len('_xxxLoc')]
            print(x)
            selectionList.append(x)
            cmds.select(cl=True)

    # Set Key
    print ('Set Key To : ' + ' '.join(selectionList))

    bakeKey = cmds.checkBox(bakeChk, q=True, value=True)
    breakdown = cmds.checkBox(breakdownChk, q=True, value=True)
    deleteLoc = cmds.checkBox(delLocChk, q=True, value=True)

    cmds.currentTime(maxTime)
    cmds.setKeyframe(selectionList, itt='auto', ott='auto', breakdown=0, hierarchy='none', controlPoints=0,at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))
    cmds.currentTime(minTime)
    cmds.setKeyframe(selectionList, itt='auto', ott='auto', breakdown=0, hierarchy='none', controlPoints=0,at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))

    if bakeKey:
        cmds.bakeResults(selectionList, simulation=True, t=(minTime, maxTime),
                         sampleBy=round(frameRate / 24, 0),
                         oversamplingRate=1, disableImplicitControl=True, preserveOutsideKeys=True,
                         sparseAnimCurveBake=False, removeBakedAttributeFromLayer=False, removeBakedAnimFromLayer=False,
                         bakeOnOverrideLayer=False, minimizeRotation=True, at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))
    else:
        tcurFrame = round(cmds.currentTime(q=True), 0)
        tnextFrame = round(cmds.findKeyframe(timeSlider=True, which='next'), 0)
        while tcurFrame < tnextFrame:
            tcurFrame = round(cmds.currentTime(q=True), 0)
            tnextFrame = round(cmds.findKeyframe(timeSlider=True, which='next'), 0)
            if breakdown:
                if (tnextFrame - tcurFrame) < btween:  # Set Key
                    cmds.currentTime(tnextFrame)
                    cmds.setKeyframe(selectionList, itt='auto', ott='auto', breakdown=0, hierarchy='none',
                                     controlPoints=0,
                                     at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))
                    btween = btweenstart
                else:  # Set BreakDown
                    cmds.currentTime(tcurFrame + btween)
                    cmds.setKeyframe(selectionList, itt='auto', ott='auto', breakdown=1, hierarchy='none',
                                     controlPoints=0,
                                     at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))
                    btween += round(frameRate / 24, 0)
            else:  # Set Key
                cmds.currentTime(tnextFrame)
                cmds.setKeyframe(selectionList, itt='auto', ott='auto', breakdown=0, hierarchy='none', controlPoints=0,
                                 at=('tx', 'ty', 'tz', 'rx', 'ry', 'rz'))
                btween = btweenstart
    print ('Auto Set Key is Done')
    cmds.currentTime(minTime)

    # Delete Locator
    if deleteLoc:
        print ('Delete : ' + ' '.join(locatorList))
        cmds.delete(locatorList)

    #Finish
    cmds.select(selectionList,r=True)
    
#upadate bake script
cmds.button(setKeyB, e=True, c=newDoSetKey)
